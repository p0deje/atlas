// Generated by CoffeeScript 1.6.2
(function() {
  var $, Atlas;

  $ = window.jQuery || (typeof require === "function" ? require('jquery') : void 0);

  Atlas = {};

  Atlas.View = (function() {
    var DELEGATE_SPLITTER;

    View.counter = 0;

    DELEGATE_SPLITTER = /^(\S+)\s*(.*)$/;

    function View(options) {
      this.options = options != null ? options : {};
      this.cid = 'view' + Atlas.View.counter;
      Atlas.View.counter += 1;
      this.el = $(this.options.el || this.el)[0];
      this.$el = $(this.el);
      if (this.events) {
        this.delegateEvents(this.events);
      }
      if (typeof this.initialize === "function") {
        this.initialize(this.options);
      }
    }

    View.prototype.$ = function(selector) {
      return $(selector, this.el);
    };

    View.prototype.remove = function() {
      return this.$el.remove();
    };

    View.prototype.delegateEvents = function(map) {
      var callbackName, event, eventRule, jQueryEvent, selector, __, _ref, _results;

      _results = [];
      for (eventRule in map) {
        callbackName = map[eventRule];
        _ref = eventRule.split(DELEGATE_SPLITTER), __ = _ref[0], jQueryEvent = _ref[1], selector = _ref[2];
        event = jQueryEvent + '.' + this.cid;
        if (selector === '') {
          _results.push(this.$el.bind(event, this[callbackName]));
        } else {
          _results.push(this.$el.delegate(selector, event, this[callbackName]));
        }
      }
      return _results;
    };

    View.prototype.undelegateEvents = function() {
      return this.$el.undelegate('.' + this.cid).unbind('.' + this.cid);
    };

    return View;

  })();

  if (typeof window !== "undefined" && window !== null) {
    window.Atlas = Atlas;
  } else {
    module.exports = Atlas;
  }

}).call(this);
